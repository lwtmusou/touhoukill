name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-ubuntu:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    #strategy:
    #  matrix:
    #    os: [, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
        with:
          path: touhoukill-refactor

      - name: Install Qt6
        uses: jurplel/install-qt-action@v2
        with:
          version: '6.1.1'
          dir: '${{ github.workspace }}/Qt6/'

      - name: Install Qt5
        uses: jurplel/install-qt-action@v2
        with:
          version: '5.15.2'
          dir: '${{ github.workspace }}/Qt5/'

      - uses: lukka/get-cmake@latest

      - name: install swig
        run: sudo apt install swig

      - name: Run CMake+Ninja without triplet
        uses: lukka/run-cmake@v3
        with:
          cmakeGenerator: 'Ninja'
          cmakeListsOrSettingsJson: 'CMakeListsTxtBasic'
          cmakeListsTxtPath: '${{ github.workspace }}/touhoukill-refactor/CMakeLists.txt'
          buildDirectory: '${{ runner.workspace }}/build'

  # build-macos:

  build-msvc:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          path: touhoukill-refactor

      - name: install swig
        run: |
          choco install swig

      - name: install Qt5
        run : |
          New-Item -Path "." -Name "Qt5" -ItemType "directory";
          (New-Object System.Net.WebClient).DownloadFile("https://github.com/Fsu0413/QtCompile/releases/download/release-20210511/Qt5.15.2-Windows-x86_64-VS2019-16.9.5-20210513.7z","Qt5/Qt5.15.2-Windows-x86_64-VS2019-16.9.5-20210513.7z");
          cmd /c cd Qt5 "&&" 7z x Qt5.15.2-Windows-x86_64-VS2019-16.9.5-20210513.7z
          .\Qt5\Qt5.15.2-Windows-x86_64-VS2019-16.9.5\bin\qmake -query

      - name: install Qt6
        run : |
          New-Item -Path "." -Name "Qt6" -ItemType "directory";
          (New-Object System.Net.WebClient).DownloadFile("https://github.com/Fsu0413/QtCompile/releases/download/release-20210609/Qt6.1.1-Windows-x86_64-VS2019-16.10.0-20210608.7z","Qt6/Qt6.1.1-Windows-x86_64-VS2019-16.10.0-20210608.7z");
          cmd /c cd Qt6 "&&" 7z x Qt6.1.1-Windows-x86_64-VS2019-16.10.0-20210608.7z
          .\Qt6\Qt6.1.1-Windows-x86_64-VS2019-16.10.0\bin\qmake -query

      - name: run cmake+ninja
        shell: cmd
        run : |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          mkdir "build"
          cd "build"
          rmdir /s /q *
          cmd /c cmake -GNinja -DCMAKE_BUILD_TYPE=Release "-DCMAKE_PREFIX_PATH=${{ github.workspace }}\Qt5\Qt5.15.2-Windows-x86_64-VS2019-16.9.5;${{ github.workspace }}\Qt6\Qt6.1.1-Windows-x86_64-VS2019-16.10.0" "${{ github.workspace }}/touhoukill-refactor"
          ninja -k0

  build-mingw81:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          path: touhoukill-refactor

      - name: install swig, cmake and ninja
        run: |
          choco install swig
          choco install cmake
          choco install ninja

      - name: install Qt5
        run : |
          New-Item -Path "." -Name "Qt5" -ItemType "directory";
          (New-Object System.Net.WebClient).DownloadFile("https://github.com/Fsu0413/QtCompile/releases/download/release-20201217/Qt5.15.2-Windows-x86_64-MinGW8.1.0-20201214.7z","Qt5/Qt5.15.2-Windows-x86_64-MinGW8.1.0-20201214.7z");
          cmd /c cd Qt5 "&&" 7z x Qt5.15.2-Windows-x86_64-MinGW8.1.0-20201214.7z
          .\Qt5\Qt5.15.2-Windows-x86_64-MinGW8.1.0\bin\qmake -query

      - name: install Qt6
        run : |
          New-Item -Path "." -Name "Qt6" -ItemType "directory";
          (New-Object System.Net.WebClient).DownloadFile("https://github.com/Fsu0413/QtCompile/releases/download/release-20210609/Qt6.1.1-Windows-x86_64-MinGW8.1.0-20210608.7z","Qt6/Qt6.1.1-Windows-x86_64-MinGW8.1.0-20210608.7z");
          cmd /c cd Qt6 "&&" 7z x Qt6.1.1-Windows-x86_64-MinGW8.1.0-20210608.7z
          .\Qt6\Qt6.1.1-Windows-x86_64-MinGW8.1.0\bin\qmake -query

      - name: run cmake+ninja
        shell: cmd
        run : |
          mkdir "build"
          cd "build"
          rmdir /s /q *
          cmd /c cmake -GNinja -DCMAKE_BUILD_TYPE=Release "-DCMAKE_PREFIX_PATH=${{ github.workspace }}\Qt5\Qt5.15.2-Windows-x86_64-MinGW8.1.0;${{ github.workspace }}\Qt6\Qt6.1.1-Windows-x86_64-MinGW8.1.0" "${{ github.workspace }}/touhoukill-refactor"
          ninja -k0

  build-mingwmsys5:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          path: touhoukill-refactor

      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          install: mingw-w64-x86_64-cmake mingw-w64-x86_64-qt5 mingw-w64-x86_64-swig mingw-w64-x86_64-toolchain mingw-w64-x86_64-ninja

      - name: run cmake+ninja
        shell: msys2 {0}
        run : |
          mkdir -p "${{ github.workspace }}/build"
          cd "${{ github.workspace }}/build"
          rm -rf `ls -A`
          cmake -GNinja "${{ github.workspace }}/touhoukill-refactor"
          ninja -k0

  build-mingwmsys6:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          path: touhoukill-refactor

      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          install: mingw-w64-x86_64-cmake mingw-w64-x86_64-qt6 mingw-w64-x86_64-swig mingw-w64-x86_64-toolchain mingw-w64-x86_64-ninja

      - name: run cmake+ninja
        shell: msys2 {0}
        run : |
          mkdir -p "${{ github.workspace }}/build"
          cd "${{ github.workspace }}/build"
          rm -rf `ls -A`
          cmake -GNinja "${{ github.workspace }}/touhoukill-refactor"
          ninja -k0


  # build-ucrt:
    # runs-on: windows-latest
    # steps:
      # - uses: actions/checkout@v2
        # with:
          # path: touhoukill-refactor

      # - uses: msys2/setup-msys2@v2
        # with:
          # msystem: UCRT64
          # install: mingw-w64-ucrt-x86_64-cmake mingw-w64-ucrt-x86_64-qt5 mingw-w64-ucrt-x86_64-swig mingw-w64-ucrt-x86_64-lua mingw-w64-ucrt-x86_64-toolchain mingw-w64-ucrt-x86_64-ninja

      # - name: run cmake+ninja
        # shell: msys2 {0}
        # run : |
          # mkdir -p "${{ github.workspace }}/build"
          # cd "${{ github.workspace }}/build"
          # rm -rf `ls -A`
          # cmake -GNinja "${{ github.workspace }}/touhoukill-refactor"
          # ninja -k0
