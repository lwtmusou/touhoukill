name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-ubuntu:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    #strategy:
    #  matrix:
    #    os: [, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
        with:
          path: touhoukill-refactor

      - name: Install Qt6
        uses: WillBrennan/yaqti@1
        with:
          version: '6.2.4'
          os: 'linux'
          platform: 'desktop'
          modules: 'qtmultimedia'

      - name: Install Qt5
        uses: WillBrennan/yaqti@1
        with:
          version: '5.15.3'
          os: 'linux'
          platform: 'desktop'
          modules: 'qtmultimedia'

      - uses: lukka/get-cmake@latest

      - name: install swig
        run: sudo apt install swig

      - name: Run CMake+Ninja without triplet
        uses: lukka/run-cmake@v3
        with:
          cmakeGenerator: 'Ninja'
          cmakeListsOrSettingsJson: 'CMakeListsTxtBasic'
          cmakeListsTxtPath: '${{ github.workspace }}/touhoukill-refactor/CMakeLists.txt'
          buildDirectory: '${{ runner.workspace }}/build'

  # build-macos:

  build-msvc:
    strategy:
      matrix:
        VC:
          - ver: 2019
            runson: windows-2019
            call: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat
            qt5url: https://github.com/Fsu0413/QtCompile/releases/download/release-20220310/Qt5.15.3-Windows-x86_64-VS2019-16.11.11-20220309.7z
            qt5name: Qt5.15.3-Windows-x86_64-VS2019-16.11.11
            qt6url: https://github.com/Fsu0413/QtCompile/releases/download/release-20220323/Qt6.2.4-Windows-x86_64-VS2019-16.11.11-20220323.7z
            qt6name: Qt6.2.4-Windows-x86_64-VS2019-16.11.11
          - ver: 2022
            runson: windows-2022
            call: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat
            qt5url: https://github.com/Fsu0413/QtCompile/releases/download/release-20220310/Qt5.15.3-Windows-x86_64-VS2022-17.1.1-20220309.7z
            qt5name: Qt5.15.3-Windows-x86_64-VS2022-17.1.1
            qt6url: https://github.com/Fsu0413/QtCompile/releases/download/release-20220323/Qt6.2.4-Windows-x86_64-VS2022-17.1.2-20220323.7z
            qt6name: Qt6.2.4-Windows-x86_64-VS2022-17.1.2

    name: build-MSVC-${{ matrix.VC.ver }}
    runs-on: ${{ matrix.VC.runson }}
    steps:
      - uses: actions/checkout@v2
        with:
          path: touhoukill-refactor

      - name: install swig
        run: |
          choco install swig

      - name: install Qt5
        run : |
          New-Item -Path "." -Name "Qt5" -ItemType "directory";
          (New-Object System.Net.WebClient).DownloadFile("${{ matrix.vc.qt5url }}","Qt5/Qt5.7z");
          cmd /c cd Qt5 "&&" 7z x Qt5.7z
          .\Qt5\${{ matrix.vc.qt5name }}\bin\qmake -query

      - name: install Qt6
        run : |
          New-Item -Path "." -Name "Qt6" -ItemType "directory";
          (New-Object System.Net.WebClient).DownloadFile("${{ matrix.vc.qt6url }}","Qt6/Qt6.7z");
          cmd /c cd Qt6 "&&" 7z x Qt6.7z
          .\Qt6\${{ matrix.vc.qt6name }}\bin\qmake -query

      - name: run cmake+ninja
        shell: cmd
        run : |
          del /s /q C:\Strawberry\perl\bin\pkg-config.bat
          call "${{ matrix.VC.call }}"
          mkdir "build"
          cd "build"
          rmdir /s /q *
          cmd /c cmake -GNinja -DCMAKE_BUILD_TYPE=Release "-DCMAKE_PREFIX_PATH=${{ github.workspace }}\Qt5\${{ matrix.vc.qt5name }};${{ github.workspace }}\Qt6\${{ matrix.vc.qt6name }}" "${{ github.workspace }}/touhoukill-refactor"
          ninja -k0

  build-mingw81:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          path: touhoukill-refactor

      - name: install swig, cmake and ninja
        run: |
          choco install swig
          choco install cmake
          choco install ninja

      - name: install Qt5
        run : |
          New-Item -Path "." -Name "Qt5" -ItemType "directory";
          (New-Object System.Net.WebClient).DownloadFile("https://github.com/Fsu0413/QtCompile/releases/download/release-20220309/Qt5.15.3-Windows-x86_64-MinGW8.1.0-20220307.7z","Qt5/Qt5.7z");
          cmd /c cd Qt5 "&&" 7z x Qt5.7z
          .\Qt5\Qt5.15.3-Windows-x86_64-MinGW8.1.0\bin\qmake -query

      # Qt 6 switched to MinGW-w64 v9 based GCC 11.2
      # - name: install Qt6
        # run : |
          # New-Item -Path "." -Name "Qt6" -ItemType "directory";
          # (New-Object System.Net.WebClient).DownloadFile("https://github.com/Fsu0413/QtCompile/releases/download/release-20210904/Qt6.1.3-Windows-x86_64-MinGW8.1.0-20210904.7z","Qt6/Qt6.1.3-Windows-x86_64-MinGW8.1.0-20210904.7z");
          # cmd /c cd Qt6 "&&" 7z x Qt6.1.3-Windows-x86_64-MinGW8.1.0-20210904.7z
          # .\Qt6\Qt6.1.3-Windows-x86_64-MinGW8.1.0\bin\qmake -query

      - name: run cmake+ninja
        shell: cmd
        run : |
          del /s /q C:\Strawberry\perl\bin\pkg-config.bat
          mkdir "build"
          cd "build"
          rmdir /s /q *
          cmd /c cmake -GNinja -DCMAKE_BUILD_TYPE=Release "-DCMAKE_PREFIX_PATH=${{ github.workspace }}\Qt5\Qt5.15.3-Windows-x86_64-MinGW8.1.0" "${{ github.workspace }}/touhoukill-refactor"
          ninja -k0

  build-mingwclang:
    runs-on: windows-latest
    strategy:
      matrix:
        clang:
          - ver: msvcrt
            toolchainurl: https://github.com/mstorsjo/llvm-mingw/releases/download/20220323/llvm-mingw-20220323-msvcrt-x86_64.zip
            toolchainname: llvm-mingw-20220323-msvcrt-x86_64
            qt6url: https://github.com/Fsu0413/QtCompile/releases/download/release-20220323/Qt6.2.4-Windows-x86_64-llvm-mingw-14.0.0-msvcrt-20220324.7z
            qt6name: Qt6.2.4-Windows-x86_64-llvm-mingw-14.0.0-msvcrt
          - ver: ucrt
            toolchainurl: https://github.com/mstorsjo/llvm-mingw/releases/download/20220323/llvm-mingw-20220323-ucrt-x86_64.zip
            toolchainname: llvm-mingw-20220323-ucrt-x86_64
            qt6url: https://github.com/Fsu0413/QtCompile/releases/download/release-20220323/Qt6.2.4-Windows-x86_64-llvm-mingw-14.0.0-ucrt-20220324.7z
            qt6name: Qt6.2.4-Windows-x86_64-llvm-mingw-14.0.0-ucrt

    name: build-mingwclang-${{ matrix.clang.ver }}
    steps:
      - uses: actions/checkout@v2
        with:
          path: touhoukill-refactor

      - name: install swig, cmake and ninja
        run: |
          choco install swig
          choco install cmake
          choco install ninja

      - name: install llvm mingw toolchain
        run: |
          New-Item -Path "." -Name "llvm-mingw" -ItemType "directory";
          (New-Object System.Net.WebClient).DownloadFile("${{ matrix.clang.toolchainurl }}","llvm-mingw/llvm-mingw.zip");
          cmd /c cd llvm-mingw "&&" 7z x llvm-mingw.zip

      - name: install Qt6
        run : |
          New-Item -Path "." -Name "Qt6" -ItemType "directory";
          (New-Object System.Net.WebClient).DownloadFile("${{ matrix.clang.qt6url }}","Qt6/Qt6.7z");
          cmd /c cd Qt6 "&&" 7z x Qt6.7z

          # This doesn't work!
          # set path=${{ github.workspace }}\llvm-mingw\llvm-mingw-20211002-${{ matrix.clang.sys }}-x86_64\x86_64-w64-mingw32\bin;${{ github.workspace }}\llvm-mingw\llvm-mingw-20211002-${{ matrix.clang.sys }}-x86_64\bin;%path%
          # .\Qt6\${{ matrix.clang.qt6name }}\bin\qmake -query

      - name: run cmake+ninja
        shell: cmd
        run : |
          del /s /q C:\Strawberry\perl\bin\pkg-config.bat
          set path=${{ github.workspace }}\llvm-mingw\${{ matrix.clang.toolchainname }}\x86_64-w64-mingw32\bin;${{ github.workspace }}\llvm-mingw\${{ matrix.clang.toolchainname }}\bin;%path%
          mkdir "build"
          cd "build"
          rmdir /s /q *
          cmd /c cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER="x86_64-w64-mingw32-clang++" -DCMAKE_C_COMPILER="x86_64-w64-mingw32-clang" -DCMAKE_ASM_COMPILER="x86_64-w64-mingw32-clang" "-DCMAKE_PREFIX_PATH=${{ github.workspace }}\Qt6\${{ matrix.clang.qt6name }}" "${{ github.workspace }}/touhoukill-refactor"
          ninja -k0

  build-mingwmsys:
    runs-on: windows-latest
    strategy:
      matrix:
        msys: [
          { sys: mingw64, env: x86_64 },
          { sys: ucrt64,  env: ucrt-x86_64 },
          { sys: clang64, env: clang-x86_64 },
        ]
    name: build-msys-${{ matrix.msys.sys }}
    steps:
      - uses: actions/checkout@v2
        with:
          path: touhoukill-refactor

      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msys.sys }}
          install: mingw-w64-${{ matrix.msys.env }}-cmake mingw-w64-${{ matrix.msys.env }}-qt5 mingw-w64-${{ matrix.msys.env }}-qt6 mingw-w64-${{ matrix.msys.env }}-swig mingw-w64-${{ matrix.msys.env }}-toolchain mingw-w64-${{ matrix.msys.env }}-ninja
          update: true

      - name: run cmake+ninja
        shell: msys2 {0}
        run : |
          mkdir -p "${{ github.workspace }}/build"
          cd "${{ github.workspace }}/build"
          rm -rf `ls -A`
          cmake -GNinja "${{ github.workspace }}/touhoukill-refactor"
          ninja -k0
