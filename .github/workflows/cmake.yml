name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  # unfortunately broken, fix is not ongoing
  # build-ubuntu:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    # runs-on: ubuntu-latest
    # strategy:
     # matrix:
       # os: [, macos-latest, windows-latest]

    # steps:
      # - uses: actions/checkout@v2
        # with:
          # path: touhoukill-refactor

      # - name: Install Qt6
        # uses: WillBrennan/yaqti@1
        # with:
          # version: '6.2.4'
          # os: 'linux'
          # platform: 'desktop'
          # modules: 'qtmultimedia'

      # - name: Install Qt5
        # uses: WillBrennan/yaqti@1
        # with:
          # version: '5.15.3'
          # os: 'linux'
          # platform: 'desktop'
          # modules: 'qtmultimedia'

      # - uses: lukka/get-cmake@latest

      # - name: install swig
        # run: sudo apt install swig

      # - name: Run CMake+Ninja without triplet
        # uses: lukka/run-cmake@v3
        # with:
          # cmakeGenerator: 'Ninja'
          # cmakeListsOrSettingsJson: 'CMakeListsTxtBasic'
          # cmakeListsTxtPath: '${{ github.workspace }}/touhoukill-refactor/CMakeLists.txt'
          # buildDirectory: '${{ runner.workspace }}/build'

  build-macos:
    # GitHub actions don't provide a macOS on ARM runner. We can only use macOS on Intel
    strategy:
      matrix:
        macOS:
          - qt5url: https://github.com/Fsu0413/QtCompile/releases/download/release-20220411/Qt5.15.3-macOS-x86_64-AppleClang12.0.5-20220409.tar.xz
            qt5name: Qt5.15.3-macOS-x86_64-AppleClang12.0.5
            qt6url: https://github.com/Fsu0413/QtCompile/releases/download/release-20220411/Qt6.3.0-macOS-x86_64-AppleClang13.1.6-20220410.tar.xz
            qt6name: Qt6.3.0-macOS-x86_64-AppleClang13.1.6

    name: build-macos
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          path: touhoukill-refactor
      
      - name: install swig
        run: |
          brew install swig cmake ninja
      
      - name: install Qt5
        run: |
          mkdir Qt5
          curl -L -o Qt5/Qt5.tar.xz ${{ matrix.macOS.qt5url }}
          (cd Qt5 && tar -xf Qt5.tar.xz)
          ./Qt5/${{ matrix.macOS.qt5name }}/bin/qmake -query
      
      - name: install Qt6
        run: |
          mkdir Qt6
          curl -L -o Qt6/Qt6.tar.xz ${{ matrix.macOS.qt6url }}
          (cd Qt6 && tar -xf Qt6.tar.xz)
          ./Qt6/${{ matrix.macOS.qt6name }}/bin/qmake -query
      
      - name: run cmake+ninja
        run : |
          mkdir -p "build"
          cd "build"
          rm -rf *
          cmake -GNinja -DCMAKE_BUILD_TYPE=Release "-DCMAKE_PREFIX_PATH=${{ github.workspace }}/Qt5/${{ matrix.macOS.qt5name }};${{ github.workspace }}/Qt6/${{ matrix.macOS.qt6name }}" "${{ github.workspace }}/touhoukill-refactor"
          ninja -k0

  build-msvc:
    strategy:
      matrix:
        VC:
          - ver: 2019
            runson: windows-2019
            call: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat
            qt5url: https://github.com/Fsu0413/QtCompile/releases/download/release-20220411/Qt5.15.3-Windows-x86_64-VS2019-16.11.11-20220410.7z
            qt5name: Qt5.15.3-Windows-x86_64-VS2019-16.11.11
            qt6url: https://github.com/Fsu0413/QtCompile/releases/download/release-20220411/Qt6.3.0-Windows-x86_64-VS2019-16.11.11-20220409.7z
            qt6name: Qt6.3.0-Windows-x86_64-VS2019-16.11.11
          - ver: 2022
            runson: windows-2022
            call: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat
            qt5url: https://github.com/Fsu0413/QtCompile/releases/download/release-20220411/Qt5.15.3-Windows-x86_64-VS2022-17.1.3-20220411.7z
            qt5name: Qt5.15.3-Windows-x86_64-VS2022-17.1.3
            qt6url: https://github.com/Fsu0413/QtCompile/releases/download/release-20220411/Qt6.3.0-Windows-x86_64-VS2022-17.1.3-20220411.7z
            qt6name: Qt6.3.0-Windows-x86_64-VS2022-17.1.3

    name: build-MSVC-${{ matrix.VC.ver }}
    runs-on: ${{ matrix.VC.runson }}
    steps:
      - uses: actions/checkout@v2
        with:
          path: touhoukill-refactor

      - name: install swig, cmake and ninja
        run: |
          choco install swig
          choco install cmake
          choco install ninja

      - name: install Qt5
        run : |
          New-Item -Path "." -Name "Qt5" -ItemType "directory";
          (New-Object System.Net.WebClient).DownloadFile("${{ matrix.VC.qt5url }}","Qt5/Qt5.7z");
          cmd /c cd Qt5 "&&" 7z x Qt5.7z
          .\Qt5\${{ matrix.VC.qt5name }}\bin\qmake -query

      - name: install Qt6
        run : |
          New-Item -Path "." -Name "Qt6" -ItemType "directory";
          (New-Object System.Net.WebClient).DownloadFile("${{ matrix.VC.qt6url }}","Qt6/Qt6.7z");
          cmd /c cd Qt6 "&&" 7z x Qt6.7z
          .\Qt6\${{ matrix.VC.qt6name }}\bin\qmake -query

      - name: run cmake+ninja
        shell: cmd
        run : |
          del /s /q C:\Strawberry\perl\bin\pkg-config.bat
          call "${{ matrix.VC.call }}"
          mkdir "build"
          cd "build"
          rmdir /s /q *
          cmd /c cmake -GNinja -DCMAKE_BUILD_TYPE=Release "-DCMAKE_PREFIX_PATH=${{ github.workspace }}\Qt5\${{ matrix.VC.qt5name }};${{ github.workspace }}\Qt6\${{ matrix.VC.qt6name }}" "${{ github.workspace }}/touhoukill-refactor"
          ninja -k0

  build-mingw:
    strategy:
      matrix:
        mingw:
          - qtver: 5
            qturl: https://github.com/Fsu0413/QtCompile/releases/download/release-20220411/Qt5.15.3-Windows-x86_64-MinGW8.1.0-20220410.7z
            qtname: Qt5.15.3-Windows-x86_64-MinGW8.1.0
            mingwurl: https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win64/Personal%20Builds/mingw-builds/8.1.0/threads-posix/seh/x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z
            mingwname: mingw64
          - qtver: 6
            qturl: https://github.com/Fsu0413/QtCompile/releases/download/release-20220411/Qt6.3.0-Windows-x86_64-MinGW11.2.0-20220409.7z
            qtname: Qt6.3.0-Windows-x86_64-MinGW11.2.0
            mingwurl: https://github.com/cristianadam/mingw-builds/releases/download/v11.2.0-rev1/x86_64-11.2.0-release-posix-seh-rt_v9-rev1.7z
            mingwname: mingw64

    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          path: touhoukill-refactor

      - name: install swig, cmake and ninja
        run: |
          choco install swig
          choco install cmake
          choco install ninja

      - name: install mingw toolchain
        run: |
          New-Item -Path "." -Name "mingw" -ItemType "directory";
          (New-Object System.Net.WebClient).DownloadFile("${{ matrix.mingw.mingwurl }}","mingw/mingw.7z");
          cmd /c cd mingw "&&" 7z x mingw.7z

      - name: install Qt${{ matrix.mingw.qtver }}
        run : |
          New-Item -Path "." -Name "Qt${{ matrix.mingw.qtver }}" -ItemType "directory";
          (New-Object System.Net.WebClient).DownloadFile("${{ matrix.mingw.qturl }}","Qt${{ matrix.mingw.qtver }}/Qt${{ matrix.mingw.qtver }}.7z");
          cmd /c cd Qt${{ matrix.mingw.qtver }} "&&" 7z x Qt${{ matrix.mingw.qtver }}.7z

      - name: run cmake+ninja
        shell: cmd
        run : |
          del /s /q C:\Strawberry\perl\bin\pkg-config.bat
          set path=${{ github.workspace }}\mingw\${{ matrix.mingw.mingwname }}\\bin;%path%
          mkdir "build"
          cd "build"
          rmdir /s /q *
          cmd /c cmake -GNinja -DCMAKE_BUILD_TYPE=Release "-DCMAKE_PREFIX_PATH=${{ github.workspace }}\Qt${{ matrix.mingw.qtver }}\${{ matrix.mingw.qtname }}" "${{ github.workspace }}/touhoukill-refactor"
          ninja -k0

  build-mingwclang:
    runs-on: windows-latest
    strategy:
      matrix:
        clang:
          - ver: msvcrt
            toolchainurl: https://github.com/mstorsjo/llvm-mingw/releases/download/20220323/llvm-mingw-20220323-msvcrt-x86_64.zip
            toolchainname: llvm-mingw-20220323-msvcrt-x86_64
            qt6url: https://github.com/Fsu0413/QtCompile/releases/download/release-20220411/Qt6.3.0-Windows-x86_64-llvm-mingw-14.0.0-msvcrt-20220409.7z
            qt6name: Qt6.3.0-Windows-x86_64-llvm-mingw-14.0.0-msvcrt
          - ver: ucrt
            toolchainurl: https://github.com/mstorsjo/llvm-mingw/releases/download/20220323/llvm-mingw-20220323-ucrt-x86_64.zip
            toolchainname: llvm-mingw-20220323-ucrt-x86_64
            qt6url: https://github.com/Fsu0413/QtCompile/releases/download/release-20220411/Qt6.3.0-Windows-x86_64-llvm-mingw-14.0.0-ucrt-20220409.7z
            qt6name: Qt6.3.0-Windows-x86_64-llvm-mingw-14.0.0-ucrt

    name: build-mingwclang-${{ matrix.clang.ver }}
    steps:
      - uses: actions/checkout@v2
        with:
          path: touhoukill-refactor

      - name: install swig, cmake and ninja
        run: |
          choco install swig
          choco install cmake
          choco install ninja

      - name: install llvm mingw toolchain
        run: |
          New-Item -Path "." -Name "llvm-mingw" -ItemType "directory";
          (New-Object System.Net.WebClient).DownloadFile("${{ matrix.clang.toolchainurl }}","llvm-mingw/llvm-mingw.zip");
          cmd /c cd llvm-mingw "&&" 7z x llvm-mingw.zip

      - name: install Qt6
        run : |
          New-Item -Path "." -Name "Qt6" -ItemType "directory";
          (New-Object System.Net.WebClient).DownloadFile("${{ matrix.clang.qt6url }}","Qt6/Qt6.7z");
          cmd /c cd Qt6 "&&" 7z x Qt6.7z

          # This doesn't work!
          # set path=${{ github.workspace }}\llvm-mingw\llvm-mingw-20211002-${{ matrix.clang.sys }}-x86_64\x86_64-w64-mingw32\bin;${{ github.workspace }}\llvm-mingw\llvm-mingw-20211002-${{ matrix.clang.sys }}-x86_64\bin;%path%
          # .\Qt6\${{ matrix.clang.qt6name }}\bin\qmake -query

      - name: run cmake+ninja
        shell: cmd
        run : |
          del /s /q C:\Strawberry\perl\bin\pkg-config.bat
          set path=${{ github.workspace }}\llvm-mingw\${{ matrix.clang.toolchainname }}\x86_64-w64-mingw32\bin;${{ github.workspace }}\llvm-mingw\${{ matrix.clang.toolchainname }}\bin;%path%
          mkdir "build"
          cd "build"
          rmdir /s /q *
          cmd /c cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER="x86_64-w64-mingw32-clang++" -DCMAKE_C_COMPILER="x86_64-w64-mingw32-clang" -DCMAKE_ASM_COMPILER="x86_64-w64-mingw32-clang" "-DCMAKE_PREFIX_PATH=${{ github.workspace }}\Qt6\${{ matrix.clang.qt6name }}" "${{ github.workspace }}/touhoukill-refactor"
          ninja -k0

  build-mingwmsys:
    runs-on: windows-latest
    strategy:
      matrix:
        msys: [
          { sys: mingw64, env: x86_64 },
          { sys: ucrt64,  env: ucrt-x86_64 },
          { sys: clang64, env: clang-x86_64 },
        ]
    name: build-msys-${{ matrix.msys.sys }}
    steps:
      - uses: actions/checkout@v2
        with:
          path: touhoukill-refactor

      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msys.sys }}
          install: mingw-w64-${{ matrix.msys.env }}-cmake mingw-w64-${{ matrix.msys.env }}-qt5 mingw-w64-${{ matrix.msys.env }}-qt6 mingw-w64-${{ matrix.msys.env }}-swig mingw-w64-${{ matrix.msys.env }}-toolchain mingw-w64-${{ matrix.msys.env }}-ninja
          update: true

      - name: run cmake+ninja
        shell: msys2 {0}
        run : |
          mkdir -p "${{ github.workspace }}/build"
          cd "${{ github.workspace }}/build"
          rm -rf `ls -A`
          cmake -GNinja "${{ github.workspace }}/touhoukill-refactor"
          ninja -k0
